                                            testNG CSTAF(Customized  Software Testing Automation Framework)
===================================================================================================================                          
                                              Nop_Login_Page
-------------------------------------------------------------------------------------------------------------------
package sreejapract;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

public class Nop_Login_Page {
	
	WebDriver driver;
	
	By email = By.id("Email");
	By paswrd = By.id("Password");
	By login = By.xpath("//button[@type='submit']");
	
	public void enterEmail(String un) {
		driver.findElement(email).clear();
		driver.findElement(email).sendKeys(un);
	}
	public void enterPasswrd(String pws){
		driver.findElement(paswrd).clear();
		driver.findElement(paswrd).sendKeys(pws);
	}
	public void clickOnLogin(){
		driver.findElement(login).click();
	}
	
	public Nop_Login_Page(WebDriver d){
		
		this.driver = d;
		
	}
	

}
-----------------------------------------------------------------------------------------------------------------------------------------
                                                           TestCase1
==========================================================================================================================
package sreejapract;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TestCase1 {

	WebDriver driver;

	@BeforeTest
	public void setUp() {

		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(60));

		driver.get("https://admin-demo.nopcommerce.com/login?ReturnUrl=%2Fadmin%2F");

	}

	@Test(parameters = {"un", "pws"})
	public void nop_Login(String un, String pws) {

		Nop_Login_Page nlp = new Nop_Login_Page(driver);
		nlp.enterEmail(un);
		nlp.enterPasswrd(pws);
		nlp.clickOnLogin();

	}

	@AfterTest
	public void tearDown() throws Exception {
		Thread.sleep(10000);
		driver.quit();
	}

}
--------------------------------------------------------------------------------------------------------------------------------
                                                      hybridparameterframework.xml
====================================================================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">

<suite name="Suite">
	<test thread-count="5" name="Test">
		<parameter name="un" value="admin@yourstore.com" />
		<parameter name="pws" value="admin" />
		<classes>
			<class name="sreejapract.TestCase1" />
		</classes>
	</test>
</suite> 


------------------------------------------------------------------------------------------------------------------------------------------------------------------

<parameter name = "Email" value = "admin@yourStore.com"/>
<parameter name = "FristName" value = "John"/>
<parameter name = "LastName" value = "Smith"/>
<parameter name = "LastactiveFrom" value = "3/13/2017"/>
<parameter name = "LastactiveTo" value = "1/10/2023"/>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------


public void enterEmail(String Email) {
		
	driver.findElement(enterEmail).sendKeys(Email);
	}

public void enterFristName(String FristName) {
	driver.findElement(enterFristName).sendKeys(FristName);
}

public void enterLastName(String LastName) {
	driver.findElement(enterLastName).sendKeys(LastName);
}

public void enterLastactivityfrom(String LastactiveFrom) {
	driver.findElement(enterLastactivityfrom).sendKeys(LastactiveFrom);
}

public void enterLastactivityto(String LastactiveTo) {
	driver.findElement(enterLastactivityto).sendKeys(LastactiveTo);
}

	public void tableinfo() {
		
	int count = driver.findElements(tableinfo).size();
	
	if (count != 0){
		
		System.out.println("Login is success full");
		
	}
	else {
		
		System.out.println("Login is not successfull");
	}
	
	
	}














